# NAME

Lib::PWQuality - Perl interface to the libpwquality C library

# VERSION

version 0.001

# SYNOPSIS

# DESCRIPTION

This module implements an interface to `libpwquality` available
[here](https://github.com/libpwquality/libpwquality/).

Installing it on Debian and Debian-based distros:

    apt install libpwquality1

I had written it against Debian version 1.4.2-1build1. If you find
differences, please report via GitHub and I'll do my best to handle it.

If you have use for this and need an [Alien](https://metacpan.org/pod/Alien) module to install the library
for you as a dependency, let me know.

# METHODS

The following methods are available:

## `new`

    my $pwq = Lib::PWQuality->new();

Creates a new `Lib::PWQuality` (`libpwquality`) object.

## `check`

    # Checks strength of password
    my $res = $pwq->check( $password );

    # Checks strength of new versus old passwords
    my $res = $pwq->check( $new_password, $old_password );

    # Checks strength of new versus old passwords and uses user-data
    my $res = $pwq->check( $new_password, $old_password, $username );

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

## `get_int_value`

    my $res = $pwq->get_int_value('MIN_LENGTH');

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

See available integer values under `INTEGER VALUES` below.

Alternatively, see `get_value`.

## `get_str_value`

    my $res = $pwq->get_str_value('BAD_WORDS');

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

See available integer values under `INTEGER VALUES` below.

Alternatively, see `get_value`.

## `get_value($key)`

    my $res = $pwq->get_value('MIN_LENGTH');

This method is a simpler form for getting a value. It helps you avoid
the call to `get_int_value` and `get_str_value`. It works by understanding
what kind of setting it needs to be and calls the right one.

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

## `generate`

    my $password = $pwq->generate($entropy_bits);

Returns a new password.

## `read_config($filename)`

    my $res = $pwq->read_config($filename);

This reads a configuration file.

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

## `set_value( $key, $value )`

    my $res = $pwq->set_value( 'MIN_LENGTH' => 10 );

This method is a simpler form for setting a value. It helps you avoid
the call to `set_int_value` and `set_str_value`. It works by understanding
what kind of setting it needs to be and calls the right one.

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

## `set_option`

    my $res = $pwq->set_option('minlen=10');

This sets options using a key=value pair. This particular method uses
different naming for the options than the one for integer or string values.

The following options are used:

- `difok`
- `minlen`
- `dcredit`
- `ucredit`
- `lcredit`
- `ocredit`
- `minclass`
- `maxrepeat`
- `maxclassrepeat`
- `maxsequence`
- `gecoscheck`
- `dictcheck`
- `usercheck`
- `usersubstr`
- `enforcing`
- `badwords`
- `dictpath`
- `retry`
- `enforce_for_root`
- `local_users_only`

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

## `set_int_value`

    my $res = $pwq->set_int_value( 'MIN_LENGTH' => 20 );

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

See available integer values under `INTEGER VALUES` below.

Alternatively, see `set_value`.

## `set_str_value`

    my $res = $pwq->set_str_value( 'BAD_WORDS', 'foo' );

Returns a string with values from [Lib::PWQuality::Return](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3AReturn).

See available integer values under `INTEGER VALUES` below.

Alternatively, see `set_value`.

## `settings`

    my $settings = $pwq->settings();
    printf "Minimum length: %d\n", $settings->min_length();

Returns the [Lib::PWQuality::Settings](https://metacpan.org/pod/Lib%3A%3APWQuality%3A%3ASettings) object.

# BENCHMARKS

- Checking password quality
- Generating password

# INTEGER VALUES

- `DIFF_OK`
- `MIN_LENGTH`
- `DIG_CREDIT`
- `UP_CREDIT`
- `LOW_CREDIT`
- `OTH_CREDIT`
- `MIN_CLASS`
- `MAX_REPEAT`
- `MAX_CLASS_REPEAT`
- `MAX_SEQUENCE`
- `GECOS_CHECK`
- `DICT_CHECK`
- `USER_CHECK`
- `USER_SUBSTR`
- `ENFORCING`
- `RETRY_TIMES`
- `ENFORCE_ROOT`
- `LOCAL_USERS`

# STRING VALUES

- `BAD_WORDS`
- `DICT_PATH`

# COVERAGE

# SEE ALSO

This module uses [FFI::Platypus](https://metacpan.org/pod/FFI%3A%3APlatypus) to connect to the C library and
[FFI::C](https://metacpan.org/pod/FFI%3A%3AC) to define the object structs.

These modules also provide quality checks for passwords:

- Foo

These modules also generate passwords:

- [App::Genpass](https://metacpan.org/pod/App%3A%3AGenpass)

# AUTHOR

Sawyer X

# COPYRIGHT AND LICENSE

This software is copyright (c) 2021 by Sawyer X.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
